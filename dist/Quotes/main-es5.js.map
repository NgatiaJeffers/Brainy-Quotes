{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/module/date-count.pipe.ts","webpack:///src/app/module/quote.ts","webpack:///src/app/quote-form/quote-form.component.ts","webpack:///src/app/quote-form/quote-form.component.html","webpack:///src/app/quote-vote/quote-vote.component.ts","webpack:///src/app/quote-vote/quote-vote.component.html","webpack:///src/app/quote/quote.component.ts","webpack:///src/app/quote/quote.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","DateCountPipe","value","today","Date","todayWithNoTime","getFullYear","getMonth","getDay","dateDifference","Math","abs","secondsInDay","dateDifferenceSeconds","dateCounter","name","Quote","text","author","date","like","dislike","showQuote","QuoteFormComponent","newQuote","addQuote","emit","addAnotherQuote","QuoteVoteComponent","numberOfLikes","numberOfDislikes","Upvote","likeClick","dislikeClick","QuoteComponent","myData","quotes","quote","quoteLength","length","push","addNewQuote","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Quotes';\n}\n","\n<nav class=\"navbar navbar-light\">\n  <div class=\"container-fluid\">\n    <span class=\"navbar-brand mb-0 h1\">Brainy Quotes</span>\n  </div>\n</nav>\n\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <app-quote class=\"col-md-12\"></app-quote>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { QuoteComponent } from './quote/quote.component';\nimport { QuoteFormComponent } from './quote-form/quote-form.component';\nimport { FormsModule } from '@angular/forms';\nimport { DateCountPipe } from './module/date-count.pipe';\nimport { QuoteVoteComponent } from './quote-vote/quote-vote.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuoteComponent,\n    QuoteFormComponent,\n    DateCountPipe,\n    QuoteVoteComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'dateCount'\n})\nexport class DateCountPipe implements PipeTransform {\n\n  transform(value: any, ...args: any[]): any {\n    let today:Date = new Date(); //get current date and time\n    let todayWithNoTime:any = new Date(today.getFullYear(), today.getMonth(),\n    today.getDay())\n\n    var dateDifference = Math.abs(value - todayWithNoTime) //returns value in milisecondsa\n    const secondsInDay = 86400; //60 seeconds * 60 mins in an hr * 24hrs in a day\n    var dateDifferenceSeconds = dateDifference * 0.001; //converts milliseconds to seconds\n    var dateCounter = dateDifferenceSeconds / secondsInDay;\n\n    if (dateCounter >= 1 && value > todayWithNoTime) {\n      return dateCounter;\n    } else {\n      return 0;\n    }\n\n  }\n\n}\n","export class Quote {\n    showQuote: boolean;\n\n    constructor(\n        public text: string,\n        public author: string,\n        public date: Date,\n        public like: number,\n        public dislike: number\n        ) {\n        this.showQuote = false;\n    }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Quote } from '../module/quote';\n\n@Component({\n  selector: 'app-quote-form',\n  templateUrl: './quote-form.component.html',\n  styleUrls: ['./quote-form.component.css']\n})\nexport class QuoteFormComponent implements OnInit {\n\n  newQuote = new Quote('', '', new Date(), 0, 0);\n\n  @Output() addQuote = new EventEmitter<Quote>();\n\n  addAnotherQuote() {\n    this.addQuote.emit(this.newQuote);\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container submit-form\">\n    <h3 class=\"brainy\">Create a Brainy Quote 💬</h3>\n    <form (submit)=\"addAnotherQuote()\">\n        <div class=\"form-group\">\n            <textarea id=\"message\"  rows=\"8\" placeholder=\"Quote..\" class=\"form-control item\"\n            [(ngModel)]=\"newQuote.text\" name=\"text\" #text='ngModel' required></textarea>\n            <div [hidden]=\"text.valid || text.pristine\" class=\"alert alert-danger \">\n                <p>The quote is required</p>\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            <input type=\"text\" class=\"form-control item\" id=\"author\" placeholder=\"Author\"\n            [(ngModel)]=\"newQuote.author\" name=\"author\" #author='ngModel' required>\n                <div [hidden]=\"author.valid || author.pristine\" class=\"alert alert-danger \">\n                    <p>The author is required</p>\n                </div>\n        </div>\n\n        <div class=\"form-group\">\n            <input type='date' id=\"date\" class=\"form-control item\" [(ngModel)]=\"newQuote.date\" name=\"date\"\n                #date='ngModel'\n                required>\n            <div [hidden]=\"date.valid || date.pristine\" class=\"alert alert-danger\">\n                <p>Date is required</p>\n            </div>\n        </div>\n            <button type=\"submit\" class=\"btn btn-block\">Add Quote</button>\n    </form>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Quote } from '../module/quote'\n\n@Component({\n  selector: 'app-quote-vote',\n  templateUrl: './quote-vote.component.html',\n  styleUrls: ['./quote-vote.component.css']\n})\nexport class QuoteVoteComponent implements OnInit {\n\n  numberOfLikes = 0;\n  numberOfDislikes = 0;\n\n  constructor() { }\n\n  @Input() quote: Quote;\n  @Output() Upvote = new EventEmitter();\n\n  ngOnInit(): void {\n  }\n\n  likeClick() {\n    this.Upvote.emit(this.numberOfLikes);\n    this.numberOfLikes++;\n  }\n\n  dislikeClick() {\n    this.numberOfDislikes++;\n  }\n\n}\n","<div class=\"vote\">\n    <div class=\"up-vote\" (click)=\"likeClick()\"></div>\n    <h5>{{ numberOfLikes }}</h5>\n\n    <div class=\"down-vote\" (click)=\"dislikeClick()\"></div>\n    <h5>{{ numberOfDislikes }}</h5>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { Quote } from '../module/quote';\n\n@Component({\n  selector: 'app-quote',\n  templateUrl: './quote.component.html',\n  styleUrls: ['./quote.component.css']\n})\nexport class QuoteComponent implements OnInit {\n\n  @Output() myData = new EventEmitter();\n  \n  quotes: Quote[] = [\n    new Quote(\n      'Dont believe anything that you read on the internet, it may be fake.',\n      'Abraham Lincon',\n      new Date(2021, 1, 6),\n      0,\n      0\n    ),\n    new Quote(\n      'Be yourself; everyone else is already taken.',\n      'Oscar Wilde',\n      new Date(2021, 2, 8),\n      0,\n      0\n    ),\n    new Quote(\n      'Genetic code is a divine writing.',\n      'Toba Beta ',\n      new Date(2019, 4, 11),\n      0,\n      0\n    ),\n    new Quote(\n      'Unless you know the code, it has no meaning.',\n      'John Connolly',\n      new Date(2019, 5, 3),\n      0,\n      0\n    ),\n    new Quote(\n      'Real web designers write code. Always have, always will.',\n      'Jeffrey Zeldman',\n      new Date(2018, 6, 3),\n      0,\n      0\n    ),\n    new Quote(\n      'Any sufficiently advanced technology is indistinguishable from magic.',\n      'Arthur C. Clarke',\n      new Date(2014, 8, 6),\n      0,\n      0\n    )\n  ]\n\n  constructor() { }\n\n  public upvote: true;\n\n  addNewQuote(quote) {\n    const quoteLength = this.quotes.length;\n    quote.date = new Date(quote.date);\n    this.quotes.push(quote);\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <app-quote-form class=\"col-md-4\" (addQuote)=\"addNewQuote($event)\"></app-quote-form>\n        <div class=\"col-md-8 mx-auto bq\">\n            <blockquote class=\"blockquote blockquote-custom p-5 shadow rounded\" *ngFor=\"let quote of quotes, let i = index\">\n                <div class=\"blockquote-custom-icon shadow-sm\"><i class=\"fa fa-quote-left text-white\"></i></div>\n                <p class=\"mb-0 mt-2 font-italic\">\"{{ quote.text }}.\"</p>\n                <footer class=\"blockquote-footer pt-4 mt-4 border-top\">Quote by\n                    <cite title=\"quote author\">{{ quote.author }}</cite>\n                    <br>\n                    <cite title=\"quote date\">{{ quote.date | date }}</cite>\n                </footer>\n                <app-quote-vote></app-quote-vote>\n            </blockquote>\n        </div>\n    </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}